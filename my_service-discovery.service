[Unit]
Description=%n
BindsTo=my_service.service
After=my_service.service

[Service]
TimeoutStartSec=0

ExecStartPre=/bin/sh -c "\
    until docker inspect --format='{{(index (index .NetworkSettings.Ports \"8080/tcp\") 0).HostPort}}' my_service.service >/dev/null 2>&1; do sleep 2; done; \
    TCP=$(docker inspect --format='{{(index (index .NetworkSettings.Ports \"8080/tcp\") 0).HostPort}}' my_service.service); \
    if [[ -z $TCP ]]; then echo We have no port...; exit 1; fi; \
    echo Waiting for $TCP/tcp...; \
    until netstat -lnt | grep :$TCP >/dev/null; do sleep 1; done"

ExecStart=/bin/sh -c "\
    HOST=$(docker inspect --format='{{ .NetworkSettings.Gateway }}' my_service.service); \
    TCP=$(docker inspect --format='{{(index (index .NetworkSettings.Ports \"8080/tcp\") 0).HostPort}}' my_service.service); \
    echo Connected to $IP:$TCP/tcp, publishing to etcd...; \
    while netstat -lnt | grep :$TCP >/dev/null; do \
        etcdctl set /services/haproxy/backend/my_service/endpoints/1 $HOST:$TCP; \
        sleep 20; \
    done"

ExecStop=/usr/bin/etcdctl rm --recursive /services/haproxy/backend/my_service/endpoints/1

[X-Fleet]
X-ConditionMachineOf=my_service.service
